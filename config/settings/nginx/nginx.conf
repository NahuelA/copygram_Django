# Nginx configuration to deploy lazygram django api.

upstream django_production {
    # fail_timeout=0 means we always retry an upstream even if it failed
    # to return a good HTTP response

    # for UNIX domain socket setups
    # server unix:/tmp/gunicorn.sock fail_timeout=0;

    # for a TCP configuration
    server 143.244.170.168:8000;
}

server {
    listen 80;
    listen [::]:80 default_server; #ipv6only=on;
    server_name .lazygram.online www.lazygram.online;

    client_max_body_size 4G;
    keepalive_timeout 5;

    # React app
    location / {
        root /var/www/build;
    }

    location /static {
        autoindex on;
        alias /var/www/lazygram.online/static/;
    }

    location /media {
        autoindex on;
        alias lazygram.online/media;
    }


    # Django application
    location /api {
        # we don't want nginx trying to do something clever with
        # redirects, we set the Host: header above already.
        proxy_redirect off;
        proxy_set_header Host $host;

        proxy_pass http://django_production;
        proxy_http_version 1.1;
        
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';

        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-NginX-Proxy true;

        proxy_cache_bypass $http_upgrade;

        proxy_ssl_session_reuse off;
        proxy_buffering off;
    }

}
