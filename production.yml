volumes:
  production_postgres_data: {}
  production_postgres_data_backups: {}
  production_lazygram_react: {}
  production_lazygram_index: {}
  production_lazygram_django_staticfiles: {}
  production_lazygram_django_mediafiles: {}


services:
  django_production: &django_production
    build:
      context: .
      dockerfile: ./compose/production/django/Dockerfile
    image: lazygram_production_django
    depends_on:
      - postgres
      - redis
    ports:
      - 8000:8000
    volumes:
      - production_lazygram_django_staticfiles:/app/staticfiles:rw
      - production_lazygram_django_mediafiles:/app/lazygram/media:rw
    env_file:
      - ./.envs/.production/.django
      - ./.envs/.production/.postgres
    command: /start
    stdin_open: true
    tty: true
    
  postgres:
    build:
        context: .
        dockerfile: ./compose/production/postgres/Dockerfile
    image: lazygram_production_postgres
    volumes:
        - production_postgres_data:/var/lib/postgresql/data
        - production_postgres_data_backups:/backups
    env_file:
        - ./.envs/.production/.postgres
    ports:
        - 5432:5432

  redis:
    image: redis:7.0-alpine
    ports:
      - 6379:6379
  
  celeryworker:
    <<: *django_production
    image: lazygram_production_celeryworker
    depends_on:
      - redis
      - postgres

    ports: []
    command: /start-celeryworker
    
  celerybeat:
    <<: *django_production
    image: lazygram_production_celerybeat
    ports: []
    command: /start-celerybeat

  flower:
    <<: *django_production
    image: lazygram_production_flower
    ports:
      - "5555:5555"
    command: /start-flower

  react:
    build:
      context: ../lazygram_react
      dockerfile: ../lazygram_react/Dockerfile
    volumes:
      - production_lazygram_react:/lazygram_react/build:rw
      - production_lazygram_index:/lazygram_react/build/index
  
  nginx-proxy:
    image: jwilder/nginx-proxy
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - /app/lazygram_django/certs:/etc/nginx/certs:ro
      - /etc/nginx/vhost.d
      - /usr/share/nginx/html
    labels:
      - com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy
  
  letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    restart: always
    volumes:
      - /app/lazygram_django/certs:/etc/nginx/certs:rw
      - /var/run/docker.sock:/var/run/docker.sock:ro
    volumes_from:
      - nginx-proxy:rw
  
  nginx:
    image: nginx
    restart: always
    expose:
      - "80"
    volumes:
      - ./config/settings/nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./config/settings/nginx/nginx-setup.conf:/etc/nginx/nginx.conf
      - production_lazygram_react:/var/www/lazygram.online/static:rw
      - production_lazygram_django_staticfiles:/var/www/lazygram.online/staticfiles:rw
      - production_lazygram_django_mediafiles:/var/www/lazygram.online/media:rw
      - production_lazygram_index:/usr/share/nginx/html
    environment:
      - VIRTUAL_HOST=lazygram.online,www.lazygram.online
      - LETSENCRYPT_HOST=lazygram.online,www.lazygram.online
      - LETSENCRYPT_EMAIL=noreply@lazygram.online
    depends_on:
      - django_production
      - react
